function(add_problem id)
  foreach(lang ${ARGN})
    if(${lang} STREQUAL c)
      add_library(solution-${id}-c ${id}/c/solution.c)
      add_library(solution-${id}-cpp-c ${id}/c/interface.cpp)
      target_link_libraries(solution-${id}-cpp-c PRIVATE solution-${id}-c)
      list(APPEND solutions solution-${id}-cpp-c)
    elseif(${lang} STREQUAL cpp)
      add_library(solution-${id}-cpp ${id}/cpp/interface.cpp)
      set_property(TARGET solution-${id}-cpp PROPERTY CXX_STANDARD 20)
      list(APPEND solutions solution-${id}-cpp)
    elseif(${lang} STREQUAL yaml)
      add_custom_command(
        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/test_cases_${id}.yaml
        COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/${id}/test_cases.yaml
                ${CMAKE_CURRENT_BINARY_DIR}/test_cases_${id}.yaml
        DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${id}/test_cases.yaml
        VERBATIM)
      add_custom_target(test-cases-${id} DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/test_cases_${id}.yaml)
      list(APPEND dependencies test-cases-${id})
    else()
      message(FATAL_ERROR "Unknown language: ${lang}")
    endif()
  endforeach()

  add_executable(test-${id} ${id}/test.cpp)
  set_property(TARGET test-${id} PROPERTY CXX_STANDARD 20)
  target_link_libraries(test-${id} PRIVATE Catch2::Catch2WithMain yaml-cpp ${solutions})
  if(dependencies)
    add_dependencies(test-${id} ${dependencies})
  endif()

  catch_discover_tests(test-${id})
endfunction()

add_problem(0001 cpp yaml)
add_problem(0004 cpp)
add_problem(0005 cpp)
add_problem(0008 cpp)
add_problem(0009 cpp)
add_problem(0011 cpp)
add_problem(0026 cpp)
add_problem(0027 cpp)
add_problem(0028 cpp)
add_problem(0035 cpp)
add_problem(0058 cpp)
add_problem(0316 cpp)
add_problem(0387 cpp)
add_problem(0389 cpp)
add_problem(0392 cpp)
add_problem(1048 cpp)
add_problem(1081 cpp)
add_problem(1232 cpp)
add_problem(1337 cpp)
add_problem(1658 cpp)
add_problem(2235 c cpp)
